'.source.js':

  'jsdoc function':
    'prefix': 'jsdoc'
    'body': "/**\n * $1\n * @param {$2} $3 - $4\n * @returns {$5} $6\n **/\n"

  'Meteor File Template JavaScript':
    'prefix': 'meteorFileTemplateJs'
    'body':
      "// imports\n"+
      "import { Meteor } from 'meteor/meteor'\n"+
      "import { Template } from 'meteor/templating'\n"+
      "import './$1.html'\n"+
      "\n"+
      "// on created\n"+
      "Template.$1.onCreated(() => {\n"+
      "  const instance = Template.instance()\n"+
      "})\n"+
      "\n"+
      "// on rendered\n"+
      "Template.$1.onRendered(() => {\n"+
      "  const instance = Template.instance()\n"+
      "})\n"+
      "\n"+
      "// helpers\n"+
      "Template.$1.helpers({\n"+
      "  helper() {\n"+
      "    const instance = Template.instance()\n"+
      "    return 'help'\n"+
      "  }\n"+
      "})\n"+
      "\n"+
      "// events\n"+
      "Template.$1.events({\n"+
      "\n"+
      "  //on click class\n"+
      "  'click .className'(event, instance) {\n"+
      "  }\n"+
      "})\n"+
      "\n"+
      "// on destroyed\n"+
      "Template.$1.onDestroyed(() => {\n"+
      "  const instance = Template.instance()\n"+
      "})\n"

  'Meteor Template onCreated':
    'prefix': 'template onCreated'
    'body': "Template.$1.onCreated(() => {\n"+
      "$2\n})"

  'Meteor Template instance':
    'prefix': 'meteor instance'
    'body': "const instance = Template.instance()"

  'Meteor Collection Allow':
    'prefix': 'allow'
    'body': "/**\n"+
            "* Client side access rules for collection $1\n"+
            "**/\n"+
            "$1.allow({\n"+
            "  insert(userId, doc) {\n"+
            "    return false\n"+
            "  },\n"+
            "  update(userId, doc, fieldNames, modifier) {\n"+
            "    return false\n"+
            "  },\n"+
            "  remove(userId, doc) {\n"+
            "    return false\n"+
            "  }\n"+
            "})"

  'Meteor Template onDestroyed':
    'prefix': 'template onDestroyed'
    'body': "Template.$1.onDestroyed(() => {\n"+
            "  const instance = Template.instance()\n"+
            "})"

  'Meteor Template onRendered':
    'prefix': 'template onRendered'
    'body': "Template.$1.onRendered(() => {\n"+
            "  const instance = Template.instance()\n"+
            "})"

  'Meteor Template helpers':
    'prefix': 'template helpers'
    'body': "Template.$1.helpers({\n"+
            "  $2() {\n"+
            "    const instance = Template.instance()\n"+
            "    $3\n"+
            "  }\n"+
            "})"

  'Meteor Template events':
    'prefix': 'template events'
    'body': "Template.$1.events({\n"+
            "  'click .$2'(event) {\n"+
            "    const instance = Template.instance()\n"+
            "    $3\n"+
            "  }\n"+
            "})"

  'Meteor import meteor':
    'prefix': 'import meteor'
    'body': "import { Meteor } from 'meteor/meteor'"

  'Meteor import template':
    'prefix': 'import template'
    'body': "import { Template } from 'meteor/templating'"

  'Meteor import tracker':
    'prefix': 'import tracker'
    'body': "import { Tracker } from 'meteor/tracker'"

  'Meteor import reactive var':
    'prefix': 'import reactive var'
    'body': "import { ReactiveVar } from 'meteor/reactive-var'"

  'Meteor import session':
    'prefix': 'import session'
    'body': "import { Session } from 'meteor/session'"

  'Meteor import check':
    'prefix': 'import check'
    'body': "import { check, Match } from 'meteor/check'"

  'Import ReactiveArray':
    'prefix': 'import reactive array'
    'body': "import { ReactiveArray } from 'meteor/manuel:reactivearray'"

  'Import Blaze':
    'prefix': 'import blaze'
    'body': "import { Blaze } from 'meteor/blaze'"

'.text.html.basic':
  'Meteor File Template HTML':
    'prefix': 'meteorFileTemplateHtml'
    'body':
      "<template name=\"$1\">\n"+
      "  {{helper}}\n"+
      "</template>\n"
